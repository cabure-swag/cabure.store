import { useEffect,useState } from 'react';import { supabase } from '../../lib/supabaseClient';import { money } from '../../utils/money';function sum(a,f){return(a||[]).reduce((s,x)=>s+f(x),0)}function d(d){return new Date(d).toLocaleDateString('es-AR')}export default function VendAn(){const [role,setRole]=useState(null);const [orders,setOrders]=useState([]);const [brands,setBrands]=useState([]);const [byDay,setByDay]=useState({});useEffect(()=>{(async()=>{const {data:s}=await supabase.auth.getSession();const u=s?.session?.user;if(!u){setRole('guest');return}const {data:prof}=await supabase.from('profiles').select('role').eq('id',u.id).single();setRole(prof?.role||'user');if(prof?.role!=='vendor'&&prof?.role!=='admin')return;const {data:vb}=await supabase.from('vendor_brands').select('brand_slug').eq('user_id',u.id);const slugs=(vb||[]).map(x=>x.brand_slug);setBrands(slugs);const {data}=await supabase.from('orders').select('id,total,created_at,brand_slug,pay').in('brand_slug',slugs);const since=new Date();since.setDate(since.getDate()-30);const recent=(data||[]).filter(o=>new Date(o.created_at)>=since);setOrders(recent);const g={};for(const o of recent){const k=d(o.created_at);g[k]=(g[k]||0)+o.total}setByDay(g)})()},[]);if(role!=='vendor'&&role!=='admin')return <main className='container'><h1 className='h1'>403</h1><p className='small'>No tenés acceso.</p></main>;const total=sum(orders,o=>o.total);const count=(orders||[]).length;const aov=count?Math.round(total/count):0;const byBrand={};for(const o of orders){byBrand[o.brand_slug]=(byBrand[o.brand_slug]||0)+o.total}return(<main className='container'><h1 className='h1'>Analytics — Vendedor (30 días)</h1><p className='small'>Marcas asignadas: {brands.join(', ')||'—'}</p><div className='grid' style={{gridTemplateColumns:'repeat(3,1fr)'}}><div className='kpi'><span className='small'>Ventas</span><span className='big'>{money(total)}</span></div><div className='kpi'><span className='small'>Pedidos</span><span className='big'>{count}</span></div><div className='kpi'><span className='small'>Ticket promedio</span><span className='big'>{money(aov)}</span></div></div><div className='card' style={{marginTop:16}}><strong>Por día</strong><table className='table'><thead><tr><th>Día</th><th>Ventas</th></tr></thead><tbody>{Object.entries(byDay).map(([k,v])=>(<tr key={k}><td>{k}</td><td>{money(v)}</td></tr>))}</tbody></table></div><div className='card' style={{marginTop:16}}><strong>Por marca</strong><table className='table'><thead><tr><th>Marca</th><th>Ventas</th></tr></thead><tbody>{Object.entries(byBrand).map(([k,v])=>(<tr key={k}><td>{k}</td><td>{money(v)}</td></tr>))}</tbody></table></div></main>)}
